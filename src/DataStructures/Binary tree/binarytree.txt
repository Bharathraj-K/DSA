Binary Tree Documentation
A Binary Tree is a hierarchical data structure where each node has at most two children, referred to as the left child and right child.

two components: 
1.node:childrens of rootnode
2.rootnode:topmost node of the Tree


Traversal:

1. In-order traversal: Left -> Root -> Right
2. Pre-order traversal: Root -> Left -> Right
3. Post-order traversal: Left -> Right -> Root

In-order traversal:
20 30 40 50 60 70 80 

Pre-order traversal:
50 30 20 40 70 60 80 

Post-order traversal:
20 40 30 60 80 70 50 

Search for 60: true
Search for 90: false



code for binarytreee : DSA\Binary tree\binarytree.java


Time Complexity:

Insertion: O(log n) in the average case (if the tree is balanced).
Traversal: O(n), where n is the number of nodes.
Search: O(log n) in the average case (if the tree is balanced).